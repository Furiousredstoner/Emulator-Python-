-----------------------[Layout]-------------------------
|INST|REGS|REG|IMMD|IMMD|IMMD|IMMD|IMMD|IMMD|IMMD|IMMD|
|0x00|0x00|0x0|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|
--------------------------------------------------------
1 INST Slot
2 REGS Slot |0xAB|0xC| A,B,C = 1-F
IMM Slot 1
IMM Slot 2
IMM Slot 3
IMM Slot 4 
IMM Slot 5
IMM Slot 6
IMM Slot 7
IMM Slot 8
11 Bytes
IMM Range (0-2,040)
------------------------------------
|INST|                      |DESCRIPTION|                                  |FUNCTION (How it works)|
|0x00|NOP                    -- Literally does nothing                      (blank slate)  

|0x01|LOAD                   -- LOAD IMM to REG                             (REG = IMM)

|0x02|ADD                    -- ADD REG + IMM or REGA + REGB = REGC         (Same As DESC)    

|0x03|SUBT                   -- SUBT REG - IMM or REGA - REGB = REGC        (Same As DESC)       

|0x04|MULT                   -- MULT REG * IMM or REGA * REGB = REGC        (Same As DESC)                  

|0x05|DIV                    -- DIV REG / IMM or REGA / REGB = REGC         (Same As DESC)                    

|0x06|CMPLT                  -- Compare less than                           (REGA vs REGB, REG vs IMM) > if True go to next line, else skip

|0x07|CMPGT                  -- Compare greater than                        (REGA vs REGB, REG vs IMM) > if true go to next line, else skip

|0x08|CMPEQ                  -- Compare equal to                            (REGA vs REGB, REG vs IMM) if true go to next line , else skip

|0x09|PRNT                   -- Prints REG and/or IMM                       (Just Prints)

|0x0A|OR                     -- Does OR operation                           () if true go to next line , else skip

|0x0B|NOR                    -- Does NOR operation                          () inverts all addresses

|0x0C|AND                    -- Does AND operation                          () if true go to next line , else skip

|0x0D|NAND                   -- Does NAND operation                         () if true go to next line , else skip

|0x0E|NOT                    -- Does NOT operation                          ()

|0x0F|XOR                    -- Does XOR operation                          () if true go to next line , else skip

|0x10|XNOR                   -- Does XNOR operation                         () if true go to next line , else skip

|0x11|PUSH                   -- Pushes Data to top of stack                 (inserts Data to REG[0])

|0x12|POP                    -- Pops Data from top of stack                 (removes Data from REG[1])

|0x13|AIMP                   -- Does Implies Operation                      (if REG A > 0 and REG B == 0 > true else false ) if true go to next line , else skip

|0x14|BIMP                   -- Does Implies Operation                      (if REG B > 0 and REG A == 0 > true else false ) if true go to next line , else skip

|0x15|ANIMP                  -- Does Nimplies Operation                     (if REG A > 0 and REG B == 0 > false else true ) if true go to next line , else skip

|0x16|BNIMP                  -- Does Nimplies Operation                     (if REG B] > 0 and REG A == 0 > false else true ) if true go to next line , else skip

|0x17|SLEEP                  -- Waits for IMM amount of secs                ( Just starts a Timer for IMM amount of secs)

|0x18|DVCSND                 -- IMM Slot 1 is OPCODE                        (Sends an OPCODE to Specified Device)

|0x19|DVCRECV                -- IMM Slot 1 is OPCODE                        (Recieves Data from Specified Device to REGS)


0x00 -< GPU
|INST|(IMM)                 |DESCRIPTION|                                  |FUNCTION (How it works)|
|0x00|SETXY                  -- IMM SLOT 2-5 = X | IMM SLOT 6-8 = Y         (Same As DESC)

|0x02|SETRGB                 -- IMM SLOT 1+2+3 = R,G,B                      (Same As DESC)

|0x03|GETRGB                 -- Grabs RGB values at specified location      ()

|0x04|PLOT                   -- PLOTS PIXEL at X,Y,R,G,B (DOES NOT RENDER)  ()

|0x05|UPDATE                 -- Renders all pixels regular or ScanLine      ()

|0x06|SCAN                   -- Toggles ScanLine Rendering                  (Requesting help..., no ARGS required just instuction toggles)

|0x07|SCALE                  -- Scales the pixels                           () 
